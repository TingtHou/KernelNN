// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MINQUE0
Rcpp::List MINQUE0(Rcpp::List KList, arma::vec y);
RcppExport SEXP _KernelNN_MINQUE0(SEXP KListSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type KList(KListSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(MINQUE0(KList, y));
    return rcpp_result_gen;
END_RCPP
}
// MINQUE
Rcpp::List MINQUE(Rcpp::List KList, arma::vec y, arma::vec prior);
RcppExport SEXP _KernelNN_MINQUE(SEXP KListSEXP, SEXP ySEXP, SEXP priorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type KList(KListSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prior(priorSEXP);
    rcpp_result_gen = Rcpp::wrap(MINQUE(KList, y, prior));
    return rcpp_result_gen;
END_RCPP
}
// IMINQUE
Rcpp::List IMINQUE(Rcpp::List KList, arma::vec y, arma::vec prior, int epoch, double threshold, bool echo);
RcppExport SEXP _KernelNN_IMINQUE(SEXP KListSEXP, SEXP ySEXP, SEXP priorSEXP, SEXP epochSEXP, SEXP thresholdSEXP, SEXP echoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type KList(KListSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< int >::type epoch(epochSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< bool >::type echo(echoSEXP);
    rcpp_result_gen = Rcpp::wrap(IMINQUE(KList, y, prior, epoch, threshold, echo));
    return rcpp_result_gen;
END_RCPP
}
// MNQTest0_Overall
Rcpp::List MNQTest0_Overall(Rcpp::List KList, arma::vec vcs, arma::vec wgt);
RcppExport SEXP _KernelNN_MNQTest0_Overall(SEXP KListSEXP, SEXP vcsSEXP, SEXP index_interestSEXP, SEXP wgtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type KList(KListSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vcs(vcsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type index_interest(index_interestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type wgt(wgtSEXP);
    rcpp_result_gen = Rcpp::wrap(MNQTest0_Overall(KList, vcs, wgt));
    return rcpp_result_gen;
END_RCPP
}
// MNQTest0_Component
Rcpp::List MNQTest0_Component(Rcpp::List KList, arma::vec vcs, arma::vec vcs_h0, Rcpp::IntegerVector index_interest, arma::vec wgt);
RcppExport SEXP _KernelNN_MNQTest0_Component(SEXP KListSEXP, SEXP vcsSEXP, SEXP vcs_h0SEXP, SEXP index_interestSEXP, SEXP wgtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type KList(KListSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vcs(vcsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vcs_h0(vcs_h0SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type index_interest(index_interestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type wgt(wgtSEXP);
    rcpp_result_gen = Rcpp::wrap(MNQTest0_Component(KList, vcs, vcs_h0, index_interest, wgt));
    return rcpp_result_gen;
END_RCPP
}
// IMNQTest_Normal
Rcpp::List IMNQTest_Normal(Rcpp::List KList, arma::vec vcs, Rcpp::IntegerVector index_interest);
RcppExport SEXP _KernelNN_IMNQTest_Normal(SEXP KListSEXP, SEXP vcsSEXP, SEXP index_interestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type KList(KListSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vcs(vcsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type index_interest(index_interestSEXP);
    rcpp_result_gen = Rcpp::wrap(IMNQTest_Normal(KList, vcs, index_interest));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KernelNN_MINQUE0", (DL_FUNC) &_KernelNN_MINQUE0, 2},
    {"_KernelNN_MINQUE", (DL_FUNC) &_KernelNN_MINQUE, 3},
    {"_KernelNN_IMINQUE", (DL_FUNC) &_KernelNN_IMINQUE, 6},
    {"_KernelNN_MNQTest0_Overall", (DL_FUNC) &_KernelNN_MNQTest0_Overall, 4},
    {"_KernelNN_MNQTest0_Component", (DL_FUNC) &_KernelNN_MNQTest0_Component, 5},
    {"_KernelNN_IMNQTest_Normal", (DL_FUNC) &_KernelNN_IMNQTest_Normal, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_KernelNN(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
